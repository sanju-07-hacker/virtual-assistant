import speech_recognition as sr 
import webbrowser as wb
import pyttsx3
import Music_library
import google.generativeai as genai
import requests as req

recognizer = sr.Recognizer()
engine = pyttsx3.init()

# genai.configure(api_key = "API-Key")


def speak(text):
    engine.say(text)
    engine.runAndWait()

def AIprocess(command):
    genai.configure(api_key = "API-Key")
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content(command)
    return(response.text)


def processCommand(c):
    if "open google or can you please open google" in c.lower():
        wb.open("https://google.com")


    elif "open facebook or can you please open facebook" in c.lower():
        wb.open("https://facebook.com")


    elif "open youtube or can you please open youtube" in c.lower():
        wb.open("https://youtube.com")


    elif "open linkedin or can you please open linkedin " in c.lower():
        wb.open("https://linkedin.com")
    

    elif c.lower().startswith("play"):
        song = c.lower().split(" ")[1]
        link = Music_library.music[song]
        wb.open(link)
        
    else:
        speak(AIprocess(c))
    
if __name__ == "__main__":
    speak("initializing alexa...")

    while True:
        # Listen for the wake word "jerry"
        # obtain audio from the microphone
        r = sr.Recognizer()

        print("recognizing.....")

        try:
            with sr.Microphone() as source:
                print("listening...")
                audio = r.listen(source, timeout=2, phrase_time_limit=1)

                word = r.recognize_google(audio)
                if(word.lower()== "alexa"):
                    speak("Yes")

                      # Listen for command
                    with sr.Microphone() as source:
                        print("alexa is actiive...")
                        audio = r.listen(source)
                        command = r.recognize_google(audio)

                        processCommand(command)

        except Exception as e:
            print("error; {0}".format(e))
